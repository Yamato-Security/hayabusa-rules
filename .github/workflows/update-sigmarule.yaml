### if you want to execte GitHub Action in your local machine please use following commnad.(Please install act if not)
### act workflow_dispatch -s GITHUB_TOKEN=(your private access token) -P ubuntu-latest=nektos/act-environments-ubuntu:18.04 --artifact-server-path /tmp/act-artifacts

name: Pipline for update Sigma rule

on:
  ## This workflow is exected once a day.
  ## And I add workflow_dispatch so that you can execute this workflow from GitHub UI. 
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *' 

jobs:
  updateSigmaRule:
    runs-on: ubuntu-latest
    steps:
      - name: clone hayabusa rule repo
        uses: actions/checkout@v2
        with:
          path: hayabusa-rules

      - name: clone sigmac
        uses: actions/checkout@v2
        with:
          repository: SigmaHQ/sigma
          path: sigma-repo # It is necessary to specify the path because hayabusa-rules repository have the folder which has the same name.
          token: ${{ secrets.GITHUB_TOKEN }} ## This is necessary for executing in local machine by act(Local GitHub Action Runner).We have to specify the github token explicitly.

      - name: set Hayabusa backend for sigmac
        run: |
          cp hayabusa-rules/tools/sigmac/convert.py sigma-repo/convert.py
          cp hayabusa-rules/tools/sigmac/hayabusa.py sigma-repo/tools/sigma/backends/hayabusa.py
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          token: '${{ secrets.GITHUB_TOKEN }}'

      - name: download requirements.txt with curl 
        uses: wei/curl@master
        with:
          args: https://raw.githubusercontent.com/Yamato-Security/hayabusa-rules/main/tools/sigmac/requirements.txt > requirements.txt 

      - name: setup Python for use script
        run: |
          pip install -r requirements.txt
          rm requirements.txt

      - name: Update sigma rules
        run: |
          pushd sigma-repo
          python3 convert.py --suppression
          popd
          rm -rf sigma
          mkdir sigma
          cp -r sigma-repo/hayabusa_rules/* hayabusa-rules/sigma/
          rm -rf sigma-repo

      - name: Create Text
        id: create-text
        continue-on-error: true
        run: |
          pushd hayabusa-rules
          echo "action_date=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "change_exist=true" >> $GITHUB_ENV
          git_new=$(git status -s | grep "??" | sed "s/?? /- /g")
          git_mod=$(git status | grep "modified:" | sed -e "s/\s*modified:\s*/- /g")
          git_del=$(git status | grep "deleted:"  | sed -e "s/\s*deleted:\s*/- /g")
          echo "::set-output name=git_new::${git_new//$'\n'/'%0A'}"
          echo "::set-output name=git_mod::${git_mod//$'\n'/'%0A'}"
          echo "::set-output name=git_del::${git_del//$'\n'/'%0A'}"
          is_rule_changed=$(git status | grep "aa.sh")
          if [ "${is_rule_changed}" ]; then
          	echo "<details><summary>New files</summary>" >> ../changed_rule.logs
          	echo ${{ steps.create-text.outputs.git_new }} >> ../changed_rule.logs
          	echo "</details>" >> ../changed_rule.logs
          	echo "<details><summary>Modified files</summary>" >> ../changed_rule.logs
          	echo ${{ steps.create-text.outputs.git_mod }} >> ../changed_rule.logs
          	echo "</details>" >> ../changed_rule.logs
          	echo "<details><summary>Deleted files</summary>" >> ../changed_rule.logs
          	echo ${{ steps.create-text.outputs.git_del }} >> ../changed_rule.logs
          	echo "</details>" >> ../changed_rule.logs
          else
            echo "change_exist=false" >> $GITHUB_ENV
          fi
          popd

      - name: Create Pull Request
        if: env.change_exist == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          path: hayabusa-rules
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Sigma Rule Update (${{ env.action_date }})
          branch: rules/auto-sigma-update
          delete-branch: true
          title: '[Auto] Sigma Update report'
          body: |
            ${{ env.action_date }} Update report
          assignees: itiB
          reviewers: itiB

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

      - name: upload change log
        if: env.change_exist == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: changed_rule_log
          path: ${{ github.workspace }}\changed_rule.logs
          retention-days: 14