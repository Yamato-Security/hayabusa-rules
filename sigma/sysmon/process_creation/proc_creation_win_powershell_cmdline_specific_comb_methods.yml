title: Encoded PowerShell Command Line
ruletype: Sigma
author: Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton
date: 2020/10/11
description: Detects specific combinations of encoding methods in the PowerShell command
    lines
detection:
    SELECTION_1:
        EventID: 1
    SELECTION_2:
        Channel: Microsoft-Windows-Sysmon/Operational
    SELECTION_3:
        Image:
        - '*\powershell.exe'
        - '*\pwsh.exe'
    SELECTION_4:
        CommandLine:
        - '*ToInt*'
        - '*ToDecimal*'
        - '*ToByte*'
        - '*ToUint*'
        - '*ToSingle*'
        - '*ToSByte*'
    SELECTION_5:
        CommandLine:
        - '*ToChar*'
        - '*ToString*'
        - '*String*'
    SELECTION_6:
        CommandLine: '*char*'
    SELECTION_7:
        CommandLine: '*join*'
    SELECTION_8:
        CommandLine: '*split*'
    SELECTION_9:
        CommandLine: '*join*'
    condition: ((SELECTION_1 and SELECTION_2) and SELECTION_3 and ((SELECTION_4 and
        SELECTION_5) or ((SELECTION_6 and SELECTION_7) or (SELECTION_8 and SELECTION_9))))
falsepositives:
- Unlikely
id: cdf05894-89e7-4ead-b2b0-0a5f97a90f2f
level: low
logsource:
    category: process_creation
    product: windows
modified: 2022/07/14
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65
related:
-   id: 5b572dcf-254b-425c-a8c5-d9af6bea35a6
    type: similar
status: test
tags:
- attack.defense_evasion
- attack.t1027
- attack.execution
- attack.t1059.001
yml_filename: proc_creation_win_powershell_cmdline_specific_comb_methods.yml
yml_path: rules/windows/process_creation
---

