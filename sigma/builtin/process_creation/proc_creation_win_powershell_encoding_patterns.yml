title: Potential Encoded PowerShell Patterns In CommandLine
ruletype: Sigma
author: Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton
date: 2020/10/11
description: Detects specific combinations of encoding methods in PowerShell via the
    commandline
detection:
    SELECTION_1:
        EventID: 4688
    SELECTION_10:
        CommandLine: '*join*'
    SELECTION_2:
        Channel: Security
    SELECTION_3:
        NewProcessName:
        - '*\powershell.exe'
        - '*\pwsh.exe'
    SELECTION_4:
        OriginalFileName:
        - PowerShell.EXE
        - pwsh.dll
    SELECTION_5:
        CommandLine:
        - '*ToInt*'
        - '*ToDecimal*'
        - '*ToByte*'
        - '*ToUint*'
        - '*ToSingle*'
        - '*ToSByte*'
    SELECTION_6:
        CommandLine:
        - '*ToChar*'
        - '*ToString*'
        - '*String*'
    SELECTION_7:
        CommandLine: '*char*'
    SELECTION_8:
        CommandLine: '*join*'
    SELECTION_9:
        CommandLine: '*split*'
    condition: ((SELECTION_1 and SELECTION_2) and (SELECTION_3 or SELECTION_4) and
        ((SELECTION_5 and SELECTION_6) or ((SELECTION_7 and SELECTION_8) or (SELECTION_9
        and SELECTION_10))))
falsepositives:
- Unknown
id: cdf05894-89e7-4ead-b2b0-0a5f97a90f2f
level: low
logsource:
    category: process_creation
    product: windows
modified: 2023/01/26
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65
related:
-   id: 5b572dcf-254b-425c-a8c5-d9af6bea35a6
    type: similar
status: test
tags:
- attack.defense_evasion
- attack.t1027
- attack.execution
- attack.t1059.001

